例外が送出されたときにブラウザのウィンドウが残る
============================================================

ブラウザの終了は ``kill_browser``
------------------------------------------------

.. code-block:: python

    start_firefox()
    # 退屈なブラウザ操作を代わりにやってくれる処理
    kill_browser()


処理の途中でエラーが送出されると、 ``kill_browser`` が呼び出されない
------------------------------------------------------------------------------------------------

.. code-block:: python

    start_firefox()
    # 退屈なブラウザ操作を代わりにやってくれる処理
    raise Exception
    kill_browser()  # 呼び出されない

.. TODO：画像（``kill_browser`` が呼び出されず、残ってしまったブラウザウィンドウ）

例外が送出されても、ブラウザのウィンドウは閉じたい
------------------------------------------------------------------------------------------------

* 例外が送出された場合も、 ``kill_browser`` を呼び出したい
* 👉 **コンテキストマネージャー**

コンテキストマネージャーとは
============================================================

* ``with`` 文で使えるオブジェクト （ `用語集 <https://docs.python.org/ja/3/glossary.html#term-context-manager>`_ ）

.. code-block:: python

    with コンテキストマネージャー:
        # 処理
        ...

``with`` 文
------------------------------------------------

    ``with`` 文はコードのかたまりの前後でコードの初期化と終了処理を実行できるようにします。

https://docs.python.org/ja/3/reference/compound_stmts.html の冒頭より

コンテキストマネージャーとは（詳しく）
------------------------------------------------

* コードの初期化：オブジェクトの ``__enter__`` メソッド
* 終了処理：オブジェクトの ``__exit__`` メソッド

コンテキストマネージャーを使ったコード
------------------------------------------------

.. code-block:: python

    with EXPR as VAR:
        BLOCK

https://www.python.org/dev/peps/pep-0343/#specification-the-with-statement

コンテキストマネージャーのイメージ
------------------------------------------------

1. ``EXPR`` を評価（コンテキストマネージャーを返す）
2. コンテキストマネージャーの ``__enter__`` を呼ぶ（＝初期化処理）
3. ``BLOCK`` を実行
4. コンテキストマネージャーの ``__exit__`` を呼ぶ（＝終了処理）

コンテキストマネージャーの実装
============================================================

クラスで実装（イメージ）
------------------------------------------------

.. code-block:: python
    :linenos:

    class MyContextManager:
        def __enter__(self):
            ...
        
        def __exit__(self, exc_type, exc_value, traceback):
            ...

https://docs.python.org/ja/3/reference/datamodel.html#context-managers

関数で実装もできる！
------------------------------------------------

.. code-block:: python
    :linenos:

    import contextlib

    @contextlib.contextmanager
    def my_context_manager():
        # __enter__ に相当する初期化処理
        
        yield  # （yieldで値を返すと as で受け取れる）

        # __exit__ に相当する終了処理

https://docs.python.org/ja/3/library/contextlib.html#contextlib.contextmanager

例外が送出された場合も、 ``kill_browser`` を呼び出すコード
------------------------------------------------------------------------------------------------

.. literalinclude:: ../../samplecode/cool_helium/contextmanager_examples.py
    :language: python
    :pyobject: using_firefox
    :linenos:

例外が送出された場合も、ブラウザウィンドウは閉じる🙌
------------------------------------------------------------------------------------------------

.. code-block:: python

    with using_firefox():
        # 退屈なブラウザ操作を代わりにやってくれる処理
        raise Exception
